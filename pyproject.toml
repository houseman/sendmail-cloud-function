[project]
name = "sendmail-cloud-function"
version = "0.0.0"
authors = [{ name = "Scott Houseman", email = "scott.houseman@gmail.com" }]
description = "Send Mailgun emails through GCP Pub/Sub"
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
]

keywords = ["email", "Google Cloud Platform"]

dependencies = ["flask", "functions-framework", "google-cloud-logging"]

[project.optional-dependencies]

dev = [
  # Linting, type checking
  "black",
  "ruff",
  "mypy",
  "pre-commit",

  # Mypy types
  "types-requests",
  "types-google-cloud-ndb",

  # Test dependencies
  "pytest",
  "pytest-cov[all]",
  "pytest-mock",

  # Required by test producer
  "python-dotenv",
  "html2text",
  "google-cloud-pubsub",
  "click",
]

[project.urls]
repository = "https://github.com/houseman/sendmail-cloud-function"

[project.scripts]
send-mail = "producer:send_email_task"

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages]
find = { namespaces = false }

[tool.ruff]
src = ["function", "producer", "tests"]

# Exclude a variety of commonly ignored directories.
exclude = [
  ".vscode",
  ".pytest_cache",
  ".eggs",
  ".git",
  "*.egg-info",
  ".mypy_cache",
  ".ruff_cache",
  ".venv",
  "build",
  "dist",
  "venv",
]

# Same as Black.
line-length = 88

target-version = "py311"

[tool.mypy]
mypy_path = ["function"]
exclude = ["build", "producer"]
python_version = 3.11
ignore_errors = false
disallow_untyped_calls = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_no_return = true

[[tool.mypy.overrides]]
module = ["tests.*"]
ignore_errors = true

[[tool.mypy.overrides]]
module = ["producer.*"]
ignore_errors = true

[[tool.mypy.overrides]]
module = ["main"]    # Some things to sort out here
ignore_errors = true

[tool.pytest.ini_options]
pythonpath = ["function"]
testpaths = ["tests"]
addopts = "--cov --cov-report html --cov-report term-missing --cov-report xml --no-cov-on-fail --cov-fail-under 100"

[tool.coverage.run]
branch = true
source = ["function"]
omit = ["tests/*"]

[tool.coverage.report]
fail_under = 100
skip_empty = true
show_missing = true
exclude_lines = ["pragma: no cover", "if TYPE_CHECKING:"]
